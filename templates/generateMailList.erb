#!/bin/bash

VHOST=<%= scope.call_function('lookup', ['profile::info::maillist::fqdn']) %>
LOCALFILE="/var/www/$VHOST/mail/mail.txt"
TODAY=$(date +%F)
OS_PASSWORD=<%= scope.call_function('lookup', ['ntnuopenstack::keystone::admin_password']) %>
OS_AUTH_URL=<%= scope.call_function('lookup', ['ntnuopenstack::endpoint::public']) %>:5000/v3
OSCMD="openstack --os-username admin --os-password $OS_PASSWORD --os-project-name admin --os-auth-url $OS_AUTH_URL --os-identity-api-version 3"

declare -a mails=()

# Fetch a list of uniqe users with a project role
users=$($OSCMD role assignment list -f value -c User | sort | uniq | egrep '\w{64}')

# Exit if we didn't get any users
if [[ -z $users ]]; then
	echo "[ERROR] Encountered problems while connecting to keystone, or no users with active roles!"
	exit 1
fi

# Iterate through the users to find e-mail
for user in $users; do
	details=$($OSCMD user show $user -f value -c email -c name)
	if [[ -z $details ]]; then
		echo "[WARNING] Found a deactivated user, skipping..."
		echo "-----------------------------------------"
	else
		# A student may not have e-mail exposed in AD, but we know that all students
		# have <username>@stud.ntnu.no
		if [[ $details =~ @ ]]; then
			mail=$(echo $details | cut -d' ' -f1)
		else
			echo "[WARNING] No mail address in AD, assuming student..."
			mail="${details}@stud.ntnu.no"
  	fi
		echo "Found $mail"
		mails=("${mails[@]}" "$mail")
		echo "-----------------------------------------"
	fi
done

# Iterate through VMs in MISC-project if it exists
if [[ $($OSCMD project show MISC 2>/dev/null) ]]; then
	vms=$($OSCMD server list -f value -c ID --project MISC)
	for vm in $vms; do
		properties=$($OSCMD server show -f value -c properties $vm)
		if [[ $properties =~ @ ]]; then
			mail=$(echo $properties | grep -oE "contact='\S+'," | cut -d "'" -f2)
		else
			echo "[WARNING] VM with ID $vm has no email details"
		fi

		if [[ -n $mail ]]; then
			echo "Found $mail from MISC-vm $vm"
			mails=("${mails[@]}" "$mail")
			echo "-----------------------------------------"
		fi
	done
fi

if [ -f $LOCALFILE ]; then
	mv $LOCALFILE{,-$TODAY}
fi

echo ${mails[@]} | tr ' ' '\n' | sort | uniq > $LOCALFILE
