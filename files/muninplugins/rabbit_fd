#!/bin/bash

for line in $(rabbitmqctl status --formatter erlang | grep file_descriptors -A 4); do
  if [[ $line =~ total_limit,([0-9]+) ]]; then
    total_limit=${BASH_REMATCH[1]}
  fi
  if [[ $line =~ total_used,([0-9]+) ]]; then
    total_used=${BASH_REMATCH[1]}
  fi
  if [[ $line =~ sockets_limit,([0-9]+) ]]; then
    sockets_limit=${BASH_REMATCH[1]}
  fi
  if [[ $line =~ sockets_used,([0-9]+) ]]; then
    sockets_used=${BASH_REMATCH[1]}
  fi
done

if [[ $1 == "config" ]]; then
  total_warn=$(($total_limit * 80 / 100))
  total_crit=$(($total_limit * 90 / 100))
  sockets_warn=$(($sockets_limit * 80 / 100))
  sockets_crit=$(($sockets_limit * 90 / 100))

  echo "graph_title Rabbit filedescriptors"
  echo "graph_category rabbitmq"
  echo "graph_vlabel open filedescriptors"
  echo "graph_args -l 0"
  echo "graph_scale yes"
  echo "graph_info Number of open files, and max limit"
  echo "totallimit.label Total limit"
  echo "totallimit.info Total limit"
  echo "totalused.label Total used"
  echo "totalused.info Total used"
  echo "totalused.warning $total_warn"
  echo "totalused.critical $total_crit"
  echo "socketslimit.label Socket limit"
  echo "socketslimit.info Socket limit"
  echo "socketsused.label Sockets used"
  echo "socketsused.info Sockets used"
  echo "socketsused.warning $sockets_warn"
  echo "socketsused.critical $sockets_crit"
  exit 0
fi

echo "totallimit.value $total_limit"
echo "totalused.value $total_used"
echo "socketslimit.value $sockets_limit"
echo "socketsused.value $sockets_used"
